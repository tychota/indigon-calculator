(function(){"use strict";function v(n){const{baseCost:e,costMultiplier:c,extraCostPercent:s,incCostPercent:d,indigonIncPercent:l,moreLessCost:C,playerManaMax:M}=n,r=d+l,o=(e*c+s*M)*(1+r/100)*C;return Math.round(o)}function F(n,e){return Math.ceil(n/e)*e}function b(n){const{server:e,player:c,skill:s,indigon:d}=n,l=e.tickInterval,C=Math.floor(e.duration/l),M=1/s.castPerSecond,r=F(M,l);let o=c.manaMax,f=[],m=r,g=!1;const h=[],I=[];let x=0,S=0;const t={time:[],spellDmg:[],manaLeft:[],manaCost:[],missedCast:[],totalSpentLast4Sec:[],castEvents:h,castDelays:I,maxSpellDmg:0,timeToMaxDmg:0,missRateAfterFirstMiss:0};for(let u=0;u<=C;u++){const i=+(u*l).toFixed(3);f=f.filter(a=>i-a.time<=4);const P=f.reduce((a,y)=>a+y.cost,0),A=Math.floor(P/200)*d.costIncPer200,p=v({baseCost:s.baseCost,costMultiplier:s.costMultiplier,extraCostPercent:s.extraCostPercent,incCostPercent:s.incCostPercent,indigonIncPercent:A,moreLessCost:s.moreLessCost,playerManaMax:c.manaMax});let T=!1;if(i>=m&&(g=!0),g)if(o>=p){const a=i;a-m>.033&&I.push({ideal:m,actual:a}),h.push({ideal:m,actual:a}),o-=p,f.push({time:i,cost:p}),m=a+r,g=!1}else T=!0;o=Math.min(c.manaMax,o+c.manaRegen*l);const D=Math.floor(P/200)*d.dmgPer200;D>x&&(x=D,S=i),t.time.push(i),t.spellDmg.push(D),t.manaLeft.push(Math.round(o)),t.manaCost.push(p),t.missedCast.push(T),t.totalSpentLast4Sec.push(P)}t.maxSpellDmg=x,t.timeToMaxDmg=S;const R=t.time[t.time.length-1],k=S,L=Math.floor((R-k)/r),w=h.filter(u=>u.actual>=k).length;return t.missRateAfterFirstMiss=(L-w)/L*100,t}self.onmessage=n=>{const e=b(n.data);self.postMessage(e)}})();
